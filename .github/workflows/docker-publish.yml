name: Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: registry.tko-aly.fi

jobs:
  build:

    runs-on: ubuntu-latest
    
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: resiina-ci
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for worker
        id: worker-meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/resiina-worker
          
      - name: Extract Docker metadata for nginx
        id: nginx-meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/resiina-nginx

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push the worker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          target: worker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.worker-meta.outputs.tags }}
          labels: ${{ steps.worker-meta.outputs.labels }}
          
      - name: Build and push the Nginx image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          target: nginx
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.nginx-meta.outputs.tags }}
          labels: ${{ steps.nginx-meta.outputs.labels }}
          
      - name: Update worker Portainer service
        run: curl -k -X POST ${{ secrets.WORKER_SERVICE_WEBHOOK }}
        if: github.event_name != 'pull_request'
          
      - name: Update nginx Portainer service
        run: curl -k -X POST ${{ secrets.NGINX_SERVICE_WEBHOOK }}
